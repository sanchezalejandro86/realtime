extends ./index.jade

block video
    video#profesorVideo(height="100%",autoplay)

block extraLine1
    .col-xs-2.col-xs-offset-2
        label.ignore-kolich Nombre:
    .col-xs-4
        input.form-control.ignore-kolich#name(type="text", value="Alumno")
    .col-xs-4
        if !locked
            button#conectar(style="background-color: transparent;border: 0;")
                img(src="/images/conectar.png",style="height:35px;",alt="CONECTAR",title="CONECTAR")
            button#desconectar(style="background-color: transparent;border: 0;",alt="DESCONECTAR",title="DESCONECTAR")
                img(src="/images/desconectar.png",style="height:35px;")

block script-2
    script.

        var profesor = false;
        //var key_code_send = 13;
        var myCall;
        var peerId;
        var name = $('#name');

        function canEdit(author) { return author.toUpperCase() != "PROFESOR"; }

        function canRemove(author) { return false; }

        function processKeyDownChat(e) { //--Con ENTER => enviar
            if (e.which != 13) return;
            var sendie = $('#sendie');
            var text = $.trim(sendie.val());
            if (text == "") return;

            if (name.val().toUpperCase() == "PROFESOR") {
                alert("El nombre de usuario elegido ya se encuentra tomado.");
                return;
            }

            var data = {
                text: text,
                inputId: Date.now(),
                classRoom: classRoom,
                author: name.val(),
                teacher: profesor
            }; //TODO este author es provisorio

            socket.emit('newMessageChat', data);
            addChatMsg(data, true);
            sendie.val("");
            e.preventDefault();
        }

        $(document).ready(function(){

            navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia;
            navigator.getUserMedia({audio: true, video:false},
                function(localMediaStream) {
                    mediaStream = localMediaStream;
                    //var selfVideo = document.getElementById('selfVideo');
                    //selfVideo.src = window.URL.createObjectURL(localMediaStream);
                },function(err) {
                        console.log('The following error occurred when trying to use getUserMedia: ' + err);
                    });

            //peer = new Peer(peerId, getConnOpts);

            var conectar = $('#conectar'),
                desconectar = $('#desconectar');

            conectar.hide();
            $("#profesorVideo").hide();

            peer.on('open', function (id) {
                console.log('open: ' + id);
                peerId = id;
                conectar.show();
                $("#profesorVideo").show();
            });


            conectar.click(function(){
                socket.emit('newStudentConnected', { peerId: peerId, classRoom: classRoom});
            });

            desconectar.click(function () {
                if(myCall != null){
                    myCall.close();
                    myCall = null;
                    socket.emit('studentDisconnected', { peerId: peerId });
                }
            });

            peer.on('call', function (call) {
                call.answer(mediaStream);
                call.on('stream', function (stream) {
                    var profesorVideo = document.getElementById('profesorVideo');
                    profesorVideo.src = window.URL.createObjectURL(stream);
                    myCall = call;
                });
            });

            peer.on('error', function(err){
                console.log(err);
            });

        });